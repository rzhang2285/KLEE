#include <vector>
#include <string>
#include "Executor.h"

using namespace klee;

void Executor::buildSignalMap() {
   if (core == OR1200) {
      OR1200Inputs.push_back("null");
      OR1200Inputs.push_back("icpu_dat_i");
      OR1200Inputs.push_back("icpu_ack_i");
      OR1200Inputs.push_back("icpu_rty_i");
      OR1200Inputs.push_back("icpu_err_i");
      OR1200Inputs.push_back("icpu_adr_i");
      OR1200Inputs.push_back("icpu_tag_i");
      OR1200Inputs.push_back("dcpu_dat_i");
      OR1200Inputs.push_back("dcpu_ack_i");
      OR1200Inputs.push_back("dcpu_rty_i");
      OR1200Inputs.push_back("dcpu_err_i");
      OR1200Inputs.push_back("dcpu_tag_i");
      OR1200Inputs.push_back("boot_adr_sel_i");
      OR1200Inputs.push_back("mtspr_dc_done");
      OR1200Inputs.push_back("sig_int");
      OR1200Inputs.push_back("sig_tick");
      OR1200Inputs.push_back("du_stall");
      OR1200Inputs.push_back("du_addr");
      OR1200Inputs.push_back("du_dat_du");
      OR1200Inputs.push_back("du_read");
      OR1200Inputs.push_back("du_write");
      OR1200Inputs.push_back("du_dsr");
      OR1200Inputs.push_back("du_dmr1");
      OR1200Inputs.push_back("du_hwbkpt");
      OR1200Inputs.push_back("du_hwbkpt_ls_r");
      OR1200Inputs.push_back("du_flush_pipe");
      OR1200Inputs.push_back("spr_dat_pic");
      OR1200Inputs.push_back("spr_dat_tt");
      OR1200Inputs.push_back("spr_dat_pm");
      OR1200Inputs.push_back("spr_dat_dmmu");
      OR1200Inputs.push_back("spr_dat_immu");
      OR1200Inputs.push_back("spr_dat_du");

      OR1200InternalStates.push_back("null");
      OR1200InternalStates.push_back("rf_rf_addrw");
      OR1200InternalStates.push_back("rf_rf_we");
      OR1200InternalStates.push_back("rf_spr_valid");
      OR1200InternalStates.push_back("rf_rf_ena");
      OR1200InternalStates.push_back("rf_rf_we_allow");
      OR1200InternalStates.push_back("rf_spr_du_cs");
      OR1200InternalStates.push_back("rf_spr_cs_fe");
      OR1200InternalStates.push_back("rf_addra_last");
      OR1200InternalStates.push_back("rf_rf_dataw");
      OR1200InternalStates.push_back("sprs_sr_reg_bit_eph");
      OR1200InternalStates.push_back("sprs_sr_reg_bit_eph_select");
      OR1200InternalStates.push_back("sprs_npc_sel");
      OR1200InternalStates.push_back("sprs_ppc_sel");
      OR1200InternalStates.push_back("sprs_sr_sel");
      OR1200InternalStates.push_back("sprs_epcr_sel");
      OR1200InternalStates.push_back("sprs_eear_sel");
      OR1200InternalStates.push_back("sprs_esr_sel");
      OR1200InternalStates.push_back("sprs_du_access");
      OR1200InternalStates.push_back("sprs_sr_reg");
      OR1200InternalStates.push_back("except_id_pc_val");
      OR1200InternalStates.push_back("except_ex_pc_val");
      OR1200InternalStates.push_back("except_id_exceptflags");
      OR1200InternalStates.push_back("except_ex_exceptflags");
      OR1200InternalStates.push_back("except_state");
      OR1200InternalStates.push_back("except_delayed1_ex_dslot");
      OR1200InternalStates.push_back("except_delayed2_ex_dslot");
      OR1200InternalStates.push_back("except_delayed_iee");
      OR1200InternalStates.push_back("except_delayed_tee");
      OR1200InternalStates.push_back("except_int_pending");
      OR1200InternalStates.push_back("except_tick_pending");
      OR1200InternalStates.push_back("except_range_pending");
      OR1200InternalStates.push_back("except_trace_trap");
      OR1200InternalStates.push_back("except_ex_freeze_prev");
      OR1200InternalStates.push_back("except_sr_ted_prev");
      OR1200InternalStates.push_back("except_dsr_te_prev");
      OR1200InternalStates.push_back("except_dmr1_st_prev");
      OR1200InternalStates.push_back("except_dmr1_bt_prev");
      OR1200InternalStates.push_back("except_dsr_te");
      OR1200InternalStates.push_back("except_sr_ted");
      OR1200InternalStates.push_back("except_dl_pc");
      OR1200InternalStates.push_back("ctrl_wb_rfaddrw");
      OR1200InternalStates.push_back("ctrl_sel_imm");
      OR1200InternalStates.push_back("ctrl_spr_read");
      OR1200InternalStates.push_back("ctrl_spr_write");
      OR1200InternalStates.push_back("genpc_freeze");
      OR1200InternalStates.push_back("if_freeze");
      OR1200InternalStates.push_back("id_freeze");
      OR1200InternalStates.push_back("wbforw_valid");
      OR1200InternalStates.push_back("ex_branch_taken");
      OR1200InternalStates.push_back("flag_we");
      OR1200InternalStates.push_back("flagforw_alu");
      OR1200InternalStates.push_back("flag_we_alu");
      OR1200InternalStates.push_back("cyforw");
      OR1200InternalStates.push_back("cy_we_alu");
      OR1200InternalStates.push_back("ovforw");
      OR1200InternalStates.push_back("ov_we_alu");
      OR1200InternalStates.push_back("ovforw_mult_mac");
      OR1200InternalStates.push_back("ov_we_mult_mac");
      OR1200InternalStates.push_back("lsu_stall");
      OR1200InternalStates.push_back("if_stall");
      OR1200InternalStates.push_back("genpc_refetch");
      OR1200InternalStates.push_back("except_align");
      OR1200InternalStates.push_back("except_dtlbmiss");
      OR1200InternalStates.push_back("except_dmmufault");
      OR1200InternalStates.push_back("except_dbuserr");
      OR1200InternalStates.push_back("if_insn");
      OR1200InternalStates.push_back("muxed_a");
      OR1200InternalStates.push_back("muxed_b");
      OR1200InternalStates.push_back("wb_forw");
      OR1200InternalStates.push_back("operand_a");
      OR1200InternalStates.push_back("operand_b");
      OR1200InternalStates.push_back("lsu_dataout");
      OR1200InternalStates.push_back("spr_dat_cfgr");
      OR1200InternalStates.push_back("mult_mac_result");
      OR1200InternalStates.push_back("freeze_multicycle_cnt");
      OR1200InternalStates.push_back("freeze_flushpipe_r");
      OR1200InternalStates.push_back("freeze_waiting_on");
      OR1200InternalStates.push_back("lsu_ex_lsu_op");
      OR1200InternalStates.push_back("lsu_id_precalc_sum");
      OR1200InternalStates.push_back("lsu_dcpu_adr_r");
      OR1200InternalStates.push_back("lsu_or1200_mem2reg__DOT__aligned");
      OR1200InternalStates.push_back("if_save_insn");
      OR1200InternalStates.push_back("if_if_bypass");
      OR1200InternalStates.push_back("if_if_bypass_reg");
      OR1200InternalStates.push_back("if_err_saved");
      OR1200InternalStates.push_back("if_saved");
      OR1200InternalStates.push_back("if_insn_saved");
      OR1200InternalStates.push_back("if_addr_saved");
      OR1200InternalStates.push_back("genpc_pcreg_select");
      OR1200InternalStates.push_back("genpc_wait_lsu");
      OR1200InternalStates.push_back("genpc_pcreg_default");
      OR1200InternalStates.push_back("genpc_pcreg");
      OR1200InternalStates.push_back("genpc_pc");
      OR1200InternalStates.push_back("mult_mac_ex_freeze_r");
      OR1200InternalStates.push_back("mult_mac_alu_op_mul");
      OR1200InternalStates.push_back("mult_mac_mul_stall_count");
      OR1200InternalStates.push_back("mult_mac_alu_op_div");
      OR1200InternalStates.push_back("mult_mac_div_free");
      OR1200InternalStates.push_back("mult_mac_div_cntr");
      OR1200InternalStates.push_back("mult_mac_div_by_zero");
      OR1200InternalStates.push_back("mult_mac_x");
      OR1200InternalStates.push_back("mult_mac_y");
      OR1200InternalStates.push_back("mult_mac_div_tmp");
      OR1200InternalStates.push_back("mult_mac_mul_prod_r");
      OR1200InternalStates.push_back("mult_mac_or1200_gmultp2_32x32__DOT__X_saved");
      OR1200InternalStates.push_back("mult_mac_or1200_gmultp2_32x32__DOT__Y_saved");
      OR1200InternalStates.push_back("mult_mac_or1200_gmultp2_32x32__DOT__p1");
      OR1200InternalStates.push_back("alu_flagcomp");
      OR1200InternalStates.push_back("alu_a_lt_b");
      OR1200InternalStates.push_back("alu_result_sum");
      OR1200InternalStates.push_back("alu_result_and");
      OR1200InternalStates.push_back("alu_carry_in");
      OR1200InternalStates.push_back("alu_b_mux");
      OR1200InternalStates.push_back("operandmuxes_saved_a");
      OR1200InternalStates.push_back("operandmuxes_saved_b");

   }
   return;
}
